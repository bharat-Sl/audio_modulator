// Autogenerated from Pigeon (v22.7.4), do not edit directly.
// See also: https://pub.dev/packages/pigeon

#ifndef PIGEON_MESSAGES_G_H_
#define PIGEON_MESSAGES_G_H_

#include <flutter_linux/flutter_linux.h>

G_BEGIN_DECLS

/**
 * AudioModulatorCode:
 * AUDIO_MODULATOR_CODE_ONE:
 * AUDIO_MODULATOR_CODE_TWO:
 *
 */
typedef enum {
  AUDIO_MODULATOR_CODE_ONE = 0,
  AUDIO_MODULATOR_CODE_TWO = 1
} AudioModulatorCode;

/**
 * AudioModulatorMessageData:
 *
 */

G_DECLARE_FINAL_TYPE(AudioModulatorMessageData, audio_modulator_message_data, AUDIO_MODULATOR, MESSAGE_DATA, GObject)

/**
 * audio_modulator_message_data_new:
 * name: field in this object.
 * description: field in this object.
 * code: field in this object.
 * data: field in this object.
 *
 * Creates a new #MessageData object.
 *
 * Returns: a new #AudioModulatorMessageData
 */
AudioModulatorMessageData* audio_modulator_message_data_new(const gchar* name, const gchar* description, AudioModulatorCode code, FlValue* data);

/**
 * audio_modulator_message_data_get_name
 * @object: a #AudioModulatorMessageData.
 *
 * Gets the value of the name field of @object.
 *
 * Returns: the field value.
 */
const gchar* audio_modulator_message_data_get_name(AudioModulatorMessageData* object);

/**
 * audio_modulator_message_data_get_description
 * @object: a #AudioModulatorMessageData.
 *
 * Gets the value of the description field of @object.
 *
 * Returns: the field value.
 */
const gchar* audio_modulator_message_data_get_description(AudioModulatorMessageData* object);

/**
 * audio_modulator_message_data_get_code
 * @object: a #AudioModulatorMessageData.
 *
 * Gets the value of the code field of @object.
 *
 * Returns: the field value.
 */
AudioModulatorCode audio_modulator_message_data_get_code(AudioModulatorMessageData* object);

/**
 * audio_modulator_message_data_get_data
 * @object: a #AudioModulatorMessageData.
 *
 * Gets the value of the data field of @object.
 *
 * Returns: the field value.
 */
FlValue* audio_modulator_message_data_get_data(AudioModulatorMessageData* object);

G_DECLARE_FINAL_TYPE(AudioModulatorMessageCodec, audio_modulator_message_codec, AUDIO_MODULATOR, MESSAGE_CODEC, FlStandardMessageCodec)

G_DECLARE_FINAL_TYPE(AudioModulatorExampleHostApi, audio_modulator_example_host_api, AUDIO_MODULATOR, EXAMPLE_HOST_API, GObject)

G_DECLARE_FINAL_TYPE(AudioModulatorExampleHostApiPlayAudioResponse, audio_modulator_example_host_api_play_audio_response, AUDIO_MODULATOR, EXAMPLE_HOST_API_PLAY_AUDIO_RESPONSE, GObject)

/**
 * audio_modulator_example_host_api_play_audio_response_new:
 *
 * Creates a new response to ExampleHostApi.playAudio.
 *
 * Returns: a new #AudioModulatorExampleHostApiPlayAudioResponse
 */
AudioModulatorExampleHostApiPlayAudioResponse* audio_modulator_example_host_api_play_audio_response_new();

/**
 * audio_modulator_example_host_api_play_audio_response_new_error:
 * @code: error code.
 * @message: error message.
 * @details: (allow-none): error details or %NULL.
 *
 * Creates a new error response to ExampleHostApi.playAudio.
 *
 * Returns: a new #AudioModulatorExampleHostApiPlayAudioResponse
 */
AudioModulatorExampleHostApiPlayAudioResponse* audio_modulator_example_host_api_play_audio_response_new_error(const gchar* code, const gchar* message, FlValue* details);

G_DECLARE_FINAL_TYPE(AudioModulatorExampleHostApiStopAudioResponse, audio_modulator_example_host_api_stop_audio_response, AUDIO_MODULATOR, EXAMPLE_HOST_API_STOP_AUDIO_RESPONSE, GObject)

/**
 * audio_modulator_example_host_api_stop_audio_response_new:
 *
 * Creates a new response to ExampleHostApi.stopAudio.
 *
 * Returns: a new #AudioModulatorExampleHostApiStopAudioResponse
 */
AudioModulatorExampleHostApiStopAudioResponse* audio_modulator_example_host_api_stop_audio_response_new();

/**
 * audio_modulator_example_host_api_stop_audio_response_new_error:
 * @code: error code.
 * @message: error message.
 * @details: (allow-none): error details or %NULL.
 *
 * Creates a new error response to ExampleHostApi.stopAudio.
 *
 * Returns: a new #AudioModulatorExampleHostApiStopAudioResponse
 */
AudioModulatorExampleHostApiStopAudioResponse* audio_modulator_example_host_api_stop_audio_response_new_error(const gchar* code, const gchar* message, FlValue* details);

/**
 * AudioModulatorExampleHostApiVTable:
 *
 * Table of functions exposed by ExampleHostApi to be implemented by the API provider.
 */
typedef struct {
  AudioModulatorExampleHostApiPlayAudioResponse* (*play_audio)(const gchar* path, double pitch, int64_t speed, gpointer user_data);
  AudioModulatorExampleHostApiStopAudioResponse* (*stop_audio)(gpointer user_data);
} AudioModulatorExampleHostApiVTable;

/**
 * audio_modulator_example_host_api_set_method_handlers:
 *
 * @messenger: an #FlBinaryMessenger.
 * @suffix: (allow-none): a suffix to add to the API or %NULL for none.
 * @vtable: implementations of the methods in this API.
 * @user_data: (closure): user data to pass to the functions in @vtable.
 * @user_data_free_func: (allow-none): a function which gets called to free @user_data, or %NULL.
 *
 * Connects the method handlers in the ExampleHostApi API.
 */
void audio_modulator_example_host_api_set_method_handlers(FlBinaryMessenger* messenger, const gchar* suffix, const AudioModulatorExampleHostApiVTable* vtable, gpointer user_data, GDestroyNotify user_data_free_func);

/**
 * audio_modulator_example_host_api_clear_method_handlers:
 *
 * @messenger: an #FlBinaryMessenger.
 * @suffix: (allow-none): a suffix to add to the API or %NULL for none.
 *
 * Clears the method handlers in the ExampleHostApi API.
 */
void audio_modulator_example_host_api_clear_method_handlers(FlBinaryMessenger* messenger, const gchar* suffix);

G_END_DECLS

#endif  // PIGEON_MESSAGES_G_H_
